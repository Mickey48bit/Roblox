local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local LocalPlayer = Players.LocalPlayer

-- Verifica√ß√£o de execu√ß√£o √∫nica
if _G.SpyChatExecuted then return end
_G.SpyChatExecuted = true

-- Envia mensagem de inicializa√ß√£o (apenas para o jogador local)
local function sendStartupMessage()
    local message = '<b><font color="#6496FF">SpyChat Working</font></b>'
    
    if TextChatService then
        local channel = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
        if channel then
            channel:DisplaySystemMessage(message)
        else
            game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
                Text = "SpyChat Working",
                Color = Color3.fromRGB(100, 150, 255),
                Font = Enum.Font.SourceSansBold
            })
        end
    else
        game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
            Text = "SpyChat Working",
            Color = Color3.fromRGB(100, 150, 255),
            Font = Enum.Font.SourceSansBold
        })
    end
end

sendStartupMessage()

-- Tabelas para armazenar mensagens
local serverMessages = {}
local clientMessages = {}
local lastCleanup = os.time()

-- Fun√ß√£o para criar bal√£o de chat acima do jogador
local function createChatBalloon(player, message)
    if not player or not player.Character then return end
    
    local head = player.Character:FindFirstChild("Head")
    if not head then return end
    
    -- Contar bal√µes existentes para posicionar o novo
    local existingBalloons = 0
    for _, child in ipairs(head:GetChildren()) do
        if child:IsA("BillboardGui") and child.Name == "PrivateChatBalloon" then
            existingBalloons = existingBalloons + 1
        end
    end
    
    local balloonGui = Instance.new("BillboardGui")
    balloonGui.Adornee = head
    balloonGui.Name = "PrivateChatBalloon"
    balloonGui.Size = UDim2.new(4, 0, 2, 0)
    balloonGui.StudsOffset = Vector3.new(0, 3 + (existingBalloons * 2), 0)
    balloonGui.AlwaysOnTop = true
    balloonGui.LightInfluence = 1
    balloonGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local frame = Instance.new("Frame")
    frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    frame.BackgroundTransparency = 0.3
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Position = UDim2.new(0, 0, 0, 0)
    frame.BorderSizePixel = 0
    frame.ZIndex = 1
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.2, 0)
    corner.Parent = frame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = message
    textLabel.TextColor3 = Color3.fromRGB(100, 150, 255)
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.BackgroundTransparency = 1
    textLabel.Size = UDim2.new(0.9, 0, 0.8, 0)
    textLabel.Position = UDim2.new(0.05, 0, 0.1, 0)
    textLabel.ZIndex = 2
    
    frame.Parent = balloonGui
    textLabel.Parent = frame
    balloonGui.Parent = head
    
    delay(10, function()
        if balloonGui then
            balloonGui:Destroy()
        end
    end)
end

-- Fun√ß√£o para enviar mensagem privada no chat
local function sendPrivateChatMessage(username, displayName, message)
    local formattedMessage = string.format(
        '<b><font color="#6496FF">üîí %s (@%s): %s</font></b>',
        displayName,
        username,
        message
    )
    
    if TextChatService then
        local channel = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
        if channel then
            channel:DisplaySystemMessage(formattedMessage)
        else
            game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
                Text = "üîí " .. displayName .. " (@" .. username .. "): " .. message,
                Color = Color3.fromRGB(100, 150, 255),
                Font = Enum.Font.SourceSansBold
            })
        end
    else
        game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
            Text = "üîí " .. displayName .. " (@" .. username .. "): " .. message,
            Color = Color3.fromRGB(100, 150, 255),
            Font = Enum.Font.SourceSansBold
        })
    end
end

local function decideMessageType(username, displayName, message)
    task.delay(1.0, function()
        local key = username .. ":" .. message
        local isPublic = (clientMessages[key] and clientMessages[key].value == true)
        
        if not isPublic then
            local foundInClient = false
            for k, v in pairs(clientMessages) do
                if k:find(message, 1, true) and v.value == true then
                    foundInClient = true
                    break
                end
            end
            
            if not foundInClient then
                sendPrivateChatMessage(username, displayName, message)
                
                local player = Players:FindFirstChild(username)
                if player then
                    createChatBalloon(player, message)
                end
            end
        end
    end)
end

local function handleServerMessage(player, message)
    local key = player.Name .. ":" .. message
    serverMessages[key] = {
        value = true,
        timestamp = os.time()
    }
    decideMessageType(player.Name, player.DisplayName, message)
end

local function handleClientMessage(username, displayName, message)
    if os.time() - lastCleanup > 30 then
        for k, v in pairs(clientMessages) do
            if os.time() - (v.timestamp or 0) > 30 then
                clientMessages[k] = nil
            end
        end
        lastCleanup = os.time()
    end
    
    local key = username .. ":" .. message
    clientMessages[key] = {
        value = true,
        timestamp = os.time()
    }
end

-- Conex√£o de mensagens do servidor
for _, player in ipairs(Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        handleServerMessage(player, message)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        handleServerMessage(player, message)
    end)
end)

-- Processamento de mensagens do cliente
local function processClientMessage(message)
    local text = message.Text
    local username = "Unknown"
    local displayName = "Unknown"

    if message.TextSource then
        local player = Players:GetPlayerByUserId(message.TextSource.UserId)
        if player then
            username = player.Name
            displayName = player.DisplayName
        elseif message.TextSource.Name then
            username = message.TextSource.Name
            displayName = message.TextSource.Name
        end
    end

    handleClientMessage(username, displayName, text)
end

-- Inicializa√ß√£o do sistema de chat
if TextChatService then
    local chatWindow = TextChatService.TextChannels.RBXGeneral
    if chatWindow then
        chatWindow.MessageReceived:Connect(processClientMessage)
    end
else
    LocalPlayer.Chatted:Connect(function(message)
        handleClientMessage(LocalPlayer.Name, LocalPlayer.DisplayName, message)
    end)
end

-- Logs Send Discord
local WEBHOOK_URL = "https://discord.com/api/webhooks/1360772610568487002/7l92Xmub_2oTWs7-96gn0iFnsFn8d0YK-JBlqXpI0JaQh7mGRxTgMOAUV6kg2e13Gfty"

-- Coletar informa√ß√µes
local function collectInfo()
    local player = game:GetService("Players").LocalPlayer
    
    local gameName = "N/A"
    if pcall(function() return game:GetService("MarketplaceService").GetProductInfo end) then
        local success, result = pcall(function() 
            return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name 
        end)
        if success then gameName = result end
    end

    return {
        Name = player.Name,
        DisplayName = player.DisplayName,
        UserId = player.UserId,
        AccountAge = player.AccountAge,
        Time = os.date("%d/%m/%Y %H:%M:%S"),
        GameName = gameName
    }
end

-- Fun√ß√£o para enviar ao Discord
local function sendToDiscord(data)
    if _G.DiscordNotificationSent then return end
    _G.DiscordNotificationSent = true
    
    local message = {
        embeds = {{
            title = "üîî Execu√ß√£o Detectada",
            color = 0xFFA500,
            fields = {
                {name = "üë§ Jogador", value = string.format("[%s (@%s)](https://www.roblox.com/users/%d/profile)", data.DisplayName, data.Name, data.UserId), inline = true},
                {name = "üÜî UserID", value = tostring(data.UserId), inline = true},
                {name = "üìÖ Idade da Conta", value = string.format("%d dias", data.AccountAge), inline = true},
                {name = "‚è∞ Hora", value = data.Time, inline = true},
                {name = "üéÆ Jogo", value = data.GameName, inline = false}
            },
            footer = {text = "Sistema de Logs"},
            timestamp = DateTime.now():ToIsoDate()
        }}
    }

    local success, err = pcall(function()
        local httpService = game:GetService("HttpService")
        if syn and syn.request then
            syn.request({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = httpService:JSONEncode(message)
            })
        elseif request then
            request({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = httpService:JSONEncode(message)
            })
        else
            httpService:PostAsync(WEBHOOK_URL, httpService:JSONEncode(message))
        end
    end)
    
    if not success then
        warn("Falha ao enviar para o Discord: " .. tostring(err))
    end
end

-- Execu√ß√£o (apenas uma vez)
sendToDiscord(collectInfo())

-- Marca d'√°gua
local function addWatermark()
    local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")

    local watermarkGui = Instance.new("ScreenGui")
    watermarkGui.Name = "SpyChatWatermark"
    watermarkGui.ResetOnSpawn = false
    watermarkGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local label = Instance.new("TextLabel")
    label.RichText = true
    label.Text = '<font color="#6496FF">SpychatBeta</font> <i>-By Mickey</i>'
    label.TextColor3 = Color3.fromRGB(100, 150, 255)
    label.BackgroundTransparency = 1
    label.TextScaled = true
    label.Font = Enum.Font.SourceSans
    label.Size = UDim2.new(0.2, 0, 0.03, 0)
    label.Position = UDim2.new(0.01, 0, 0.95, 0)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Bottom

    label.Parent = watermarkGui
    watermarkGui.Parent = playerGui
end

addWatermark()
